<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{%- css %}{% include "node_modules/prismjs/themes/prism-solarizedlight.css" %}{% endcss %}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}
		<link rel="icon" type="image/png" href="{{ '/img/favicon.png' | url }}" />

	</head>
	<body>
		<header>
			<h1><a href="/" class="home-link">{{ metadata.title }}</a></h1>
			<span>A blog by <a href="https://printerscanner.net">printer_scanner</a>.</span>
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				{# <ul class="nav">
				{%- for entry in collections.all | eleventyNavigation %}
					<li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
				{%- endfor %}
				</ul> #}
			</nav>
	</header>
		<a href="#skip" class="visually-hidden">Skip to main content</a>
	<section>
			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}

		<main id="skip">
			{{ content | safe }}
		</main>
</section>

<footer>
    <div style="flex-grow:1">
        <p style="margin:0">Like the blog? Get the newsletter for updates.</p>
        <form
            id="earthly-delights-contact"
            method="POST"
            netlify
            class="form"
        >
            <input type="hidden" name="form-name" value="contact" />
            <input
                id="standard-basic"
                label="email"
                required
                name="email"
                class="email"
                placeholder="lizzie@theranos.com"
            />
            <button type="submit" class="submit-button">â†’</button>
        </form>
        <br>
        <a href="https://earthlydelights.net">The Garden of Earthly Delights</a>
    </div>
		<br></br>
    <a href="https://printerscanner.net">Printer Scanner Studio</a>
    <br></br>
</footer>

<script>
    // Function to handle form submission
    const handleSubmit = async (e) => {
        e.preventDefault();
        const form = e.target;
        const formData = new FormData(form);

        try {
            const response = await fetch('/', {
							method: 'POST',
							headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
							body: new URLSearchParams({
								'form-name': 'earthly-delights-contact',
								email: e.target.email.value,
							}).toString(),
            });
						console.log(response);
            if (response.ok) {
                displayThanksMessage("You're a little freak ðŸ˜‰, thanks for joining.");
                form.reset(); // Reset form fields if needed
            } else {
                displayThanksMessage("Oops! Something went wrong. Please try again later.");
            }
        } catch (error) {
            console.error('Form submission failed:', error);
            displayThanksMessage("Oops! Something went wrong. Please try again later.");
        }
    };

    // Function to display thanks message
    const displayThanksMessage = (message) => {
        // Creating a div element to hold the message
        const bubble = document.createElement('div');
        bubble.className = 'thanks-bubble';
        bubble.innerHTML = `<p>${message}</p>`;

        // Appending the bubble to the form
        const form = document.getElementById('earthly-delights-contact');
        form.appendChild(bubble);

        // Hiding the bubble after 3 seconds
        setTimeout(() => {
            bubble.remove();
        }, 3000);
    };

    // Attach form submission event listener
    const form = document.getElementById('earthly-delights-contact');
    form.addEventListener('submit', handleSubmit);
</script>

</html>
